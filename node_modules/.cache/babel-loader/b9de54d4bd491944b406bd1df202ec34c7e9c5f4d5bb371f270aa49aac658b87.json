{"ast":null,"code":"var _jsxFileName = \"/Users/ameerhamza/Downloads/Development/Mobile-Developer-Portfolio/src/components/languageSwitcher/LanguageSwitcher.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./LanguageSwitcher.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LanguageSwitcher() {\n  _s();\n  const {\n    i18n\n  } = useTranslation();\n\n  // Chrome-specific fix: Force language detection on component mount\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem('i18nextLng') || sessionStorage.getItem('i18nextLng');\n    if (savedLanguage && savedLanguage !== i18n.language) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n]);\n  const changeLanguage = lng => {\n    i18n.changeLanguage(lng);\n\n    // Chrome fallback: Manually save to both localStorage and sessionStorage\n    try {\n      localStorage.setItem('i18nextLng', lng);\n      sessionStorage.setItem('i18nextLng', lng);\n    } catch (error) {\n      console.warn('Could not save language preference:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"language-switcher\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `lang-btn ${i18n.language === 'en' ? 'active' : ''}`,\n      onClick: () => changeLanguage('en'),\n      \"aria-label\": \"Switch to English\",\n      children: \"EN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `lang-btn ${i18n.language === 'fr' ? 'active' : ''}`,\n      onClick: () => changeLanguage('fr'),\n      \"aria-label\": \"Switch to French\",\n      children: \"FR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(LanguageSwitcher, \"XIFq83ieJr2IDBjDrSkk+Qj6jto=\", false, function () {\n  return [useTranslation];\n});\n_c = LanguageSwitcher;\nvar _c;\n$RefreshReg$(_c, \"LanguageSwitcher\");","map":{"version":3,"names":["React","useEffect","useTranslation","jsxDEV","_jsxDEV","LanguageSwitcher","_s","i18n","savedLanguage","localStorage","getItem","sessionStorage","language","changeLanguage","lng","setItem","error","console","warn","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ameerhamza/Downloads/Development/Mobile-Developer-Portfolio/src/components/languageSwitcher/LanguageSwitcher.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./LanguageSwitcher.scss\";\n\nexport default function LanguageSwitcher() {\n  const { i18n } = useTranslation();\n\n  // Chrome-specific fix: Force language detection on component mount\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem('i18nextLng') || \n                         sessionStorage.getItem('i18nextLng');\n    \n    if (savedLanguage && savedLanguage !== i18n.language) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n]);\n\n  const changeLanguage = (lng) => {\n    i18n.changeLanguage(lng);\n    \n    // Chrome fallback: Manually save to both localStorage and sessionStorage\n    try {\n      localStorage.setItem('i18nextLng', lng);\n      sessionStorage.setItem('i18nextLng', lng);\n    } catch (error) {\n      console.warn('Could not save language preference:', error);\n    }\n  };\n\n  return (\n    <div className=\"language-switcher\">\n      <button \n        className={`lang-btn ${i18n.language === 'en' ? 'active' : ''}`}\n        onClick={() => changeLanguage('en')}\n        aria-label=\"Switch to English\"\n      >\n        EN\n      </button>\n      <button \n        className={`lang-btn ${i18n.language === 'fr' ? 'active' : ''}`}\n        onClick={() => changeLanguage('fr')}\n        aria-label=\"Switch to French\"\n      >\n        FR\n      </button>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACzC,MAAM;IAAEC;EAAK,CAAC,GAAGL,cAAc,CAAC,CAAC;;EAEjC;EACAD,SAAS,CAAC,MAAM;IACd,MAAMO,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,IACnCC,cAAc,CAACD,OAAO,CAAC,YAAY,CAAC;IAEzD,IAAIF,aAAa,IAAIA,aAAa,KAAKD,IAAI,CAACK,QAAQ,EAAE;MACpDL,IAAI,CAACM,cAAc,CAACL,aAAa,CAAC;IACpC;EACF,CAAC,EAAE,CAACD,IAAI,CAAC,CAAC;EAEV,MAAMM,cAAc,GAAIC,GAAG,IAAK;IAC9BP,IAAI,CAACM,cAAc,CAACC,GAAG,CAAC;;IAExB;IACA,IAAI;MACFL,YAAY,CAACM,OAAO,CAAC,YAAY,EAAED,GAAG,CAAC;MACvCH,cAAc,CAACI,OAAO,CAAC,YAAY,EAAED,GAAG,CAAC;IAC3C,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACC,IAAI,CAAC,qCAAqC,EAAEF,KAAK,CAAC;IAC5D;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKe,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChChB,OAAA;MACEe,SAAS,EAAG,YAAWZ,IAAI,CAACK,QAAQ,KAAK,IAAI,GAAG,QAAQ,GAAG,EAAG,EAAE;MAChES,OAAO,EAAEA,CAAA,KAAMR,cAAc,CAAC,IAAI,CAAE;MACpC,cAAW,mBAAmB;MAAAO,QAAA,EAC/B;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTrB,OAAA;MACEe,SAAS,EAAG,YAAWZ,IAAI,CAACK,QAAQ,KAAK,IAAI,GAAG,QAAQ,GAAG,EAAG,EAAE;MAChES,OAAO,EAAEA,CAAA,KAAMR,cAAc,CAAC,IAAI,CAAE;MACpC,cAAW,kBAAkB;MAAAO,QAAA,EAC9B;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACnB,EAAA,CA3CuBD,gBAAgB;EAAA,QACrBH,cAAc;AAAA;AAAAwB,EAAA,GADTrB,gBAAgB;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}