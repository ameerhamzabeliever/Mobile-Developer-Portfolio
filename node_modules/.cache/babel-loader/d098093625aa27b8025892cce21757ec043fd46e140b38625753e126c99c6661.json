{"ast":null,"code":"import i18n from'i18next';import{initReactI18next}from'react-i18next';import LanguageDetector from'i18next-browser-languagedetector';// Translation files\nimport enTranslations from'./locales/en/translation.json';import frTranslations from'./locales/fr/translation.json';const resources={en:{translation:enTranslations},fr:{translation:frTranslations}};i18n.use(LanguageDetector).use(initReactI18next).init({resources,fallbackLng:'en',supportedLngs:['en','fr'],// Explicitly define supported languages\nload:'languageOnly',// Ignore region codes like 'en-US' -> 'en'\ndebug:process.env.NODE_ENV==='development',interpolation:{escapeValue:false// not needed for react as it escapes by default\n},detection:{order:['localStorage','sessionStorage','navigator','htmlTag'],caches:['localStorage','sessionStorage'],lookupLocalStorage:'i18nextLng',lookupSessionStorage:'i18nextLng',excludeCacheFor:['cimode'],// languages to not persist (cookie, localStorage)\n// Chrome-specific fixes\ncheckWhitelist:true,checkForSimilar:true},// Ensure immediate language change\nreact:{useSuspense:false}}).then(()=>{// Chrome debugging - log current language state\nif(process.env.NODE_ENV==='development'){console.log('i18n initialized');console.log('Current language:',i18n.language);console.log('Detected languages:',i18n.languages);console.log('localStorage i18nextLng:',localStorage.getItem('i18nextLng'));}});export default i18n;","map":{"version":3,"names":["i18n","initReactI18next","LanguageDetector","enTranslations","frTranslations","resources","en","translation","fr","use","init","fallbackLng","supportedLngs","load","debug","process","env","NODE_ENV","interpolation","escapeValue","detection","order","caches","lookupLocalStorage","lookupSessionStorage","excludeCacheFor","checkWhitelist","checkForSimilar","react","useSuspense","then","console","log","language","languages","localStorage","getItem"],"sources":["/Users/ameerhamza/Downloads/Development/Mobile-Developer-Portfolio/src/i18n.js"],"sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\n// Translation files\nimport enTranslations from './locales/en/translation.json';\nimport frTranslations from './locales/fr/translation.json';\n\nconst resources = {\n  en: {\n    translation: enTranslations,\n  },\n  fr: {\n    translation: frTranslations,\n  },\n};\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources,\n    fallbackLng: 'en',\n    supportedLngs: ['en', 'fr'], // Explicitly define supported languages\n    load: 'languageOnly', // Ignore region codes like 'en-US' -> 'en'\n    debug: process.env.NODE_ENV === 'development',\n    \n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n    \n    detection: {\n      order: ['localStorage', 'sessionStorage', 'navigator', 'htmlTag'],\n      caches: ['localStorage', 'sessionStorage'],\n      lookupLocalStorage: 'i18nextLng',\n      lookupSessionStorage: 'i18nextLng',\n      excludeCacheFor: ['cimode'], // languages to not persist (cookie, localStorage)\n      \n      // Chrome-specific fixes\n      checkWhitelist: true,\n      checkForSimilar: true\n    },\n    \n    // Ensure immediate language change\n    react: {\n      useSuspense: false\n    }\n  })\n  .then(() => {\n    // Chrome debugging - log current language state\n    if (process.env.NODE_ENV === 'development') {\n      console.log('i18n initialized');\n      console.log('Current language:', i18n.language);\n      console.log('Detected languages:', i18n.languages);\n      console.log('localStorage i18nextLng:', localStorage.getItem('i18nextLng'));\n    }\n  });\n\nexport default i18n;\n"],"mappings":"AAAA,MAAO,CAAAA,IAAI,KAAM,SAAS,CAC1B,OAASC,gBAAgB,KAAQ,eAAe,CAChD,MAAO,CAAAC,gBAAgB,KAAM,kCAAkC,CAE/D;AACA,MAAO,CAAAC,cAAc,KAAM,+BAA+B,CAC1D,MAAO,CAAAC,cAAc,KAAM,+BAA+B,CAE1D,KAAM,CAAAC,SAAS,CAAG,CAChBC,EAAE,CAAE,CACFC,WAAW,CAAEJ,cACf,CAAC,CACDK,EAAE,CAAE,CACFD,WAAW,CAAEH,cACf,CACF,CAAC,CAEDJ,IAAI,CACDS,GAAG,CAACP,gBAAgB,CAAC,CACrBO,GAAG,CAACR,gBAAgB,CAAC,CACrBS,IAAI,CAAC,CACJL,SAAS,CACTM,WAAW,CAAE,IAAI,CACjBC,aAAa,CAAE,CAAC,IAAI,CAAE,IAAI,CAAC,CAAE;AAC7BC,IAAI,CAAE,cAAc,CAAE;AACtBC,KAAK,CAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,aAAa,CAE7CC,aAAa,CAAE,CACbC,WAAW,CAAE,KAAO;AACtB,CAAC,CAEDC,SAAS,CAAE,CACTC,KAAK,CAAE,CAAC,cAAc,CAAE,gBAAgB,CAAE,WAAW,CAAE,SAAS,CAAC,CACjEC,MAAM,CAAE,CAAC,cAAc,CAAE,gBAAgB,CAAC,CAC1CC,kBAAkB,CAAE,YAAY,CAChCC,oBAAoB,CAAE,YAAY,CAClCC,eAAe,CAAE,CAAC,QAAQ,CAAC,CAAE;AAE7B;AACAC,cAAc,CAAE,IAAI,CACpBC,eAAe,CAAE,IACnB,CAAC,CAED;AACAC,KAAK,CAAE,CACLC,WAAW,CAAE,KACf,CACF,CAAC,CAAC,CACDC,IAAI,CAAC,IAAM,CACV;AACA,GAAIf,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,aAAa,CAAE,CAC1Cc,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC,CAC/BD,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAEhC,IAAI,CAACiC,QAAQ,CAAC,CAC/CF,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAEhC,IAAI,CAACkC,SAAS,CAAC,CAClDH,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAEG,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,CAC7E,CACF,CAAC,CAAC,CAEJ,cAAe,CAAApC,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}