{"ast":null,"code":"import React,{useContext}from\"react\";import{useTranslation}from\"react-i18next\";import\"./Achievement.scss\";import AchievementCard from\"../../components/achievementCard/AchievementCard\";import{achievementSection}from\"../../portfolio\";import{Fade}from\"react-reveal\";import StyleContext from\"../../contexts/StyleContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Achievement(){const{t}=useTranslation();const{isDark}=useContext(StyleContext);if(!achievementSection.display){return null;}return/*#__PURE__*/_jsx(Fade,{bottom:true,duration:1000,distance:\"20px\",children:/*#__PURE__*/_jsx(\"div\",{className:\"main\",id:\"achievements\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"achievement-main-div\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"achievement-header\",children:[/*#__PURE__*/_jsx(\"h1\",{className:isDark?\"dark-mode skills-heading\":\"skills-heading\",children:t('achievements.title',achievementSection.title)}),/*#__PURE__*/_jsx(\"p\",{className:isDark?\"dark-mode subTitle achievement-subtitle\":\"subTitle achievement-subtitle\",children:t('achievements.subtitle',achievementSection.subtitle)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"achievement-cards-div\",children:achievementSection.achievementsCards.map((card,i)=>{return/*#__PURE__*/_jsx(AchievementCard,{isDark:isDark,cardInfo:{title:card.title,description:card.subtitle,image:card.image,imageAlt:card.imageAlt,footer:card.footerLink}},i);})})]})})});}","map":{"version":3,"names":["React","useContext","useTranslation","AchievementCard","achievementSection","Fade","StyleContext","jsx","_jsx","jsxs","_jsxs","Achievement","t","isDark","display","bottom","duration","distance","children","className","id","title","subtitle","achievementsCards","map","card","i","cardInfo","description","image","imageAlt","footer","footerLink"],"sources":["/Users/ameerhamza/Downloads/Development/Mobile-Developer-Portfolio/src/containers/achievement/Achievement.js"],"sourcesContent":["import React, {useContext} from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./Achievement.scss\";\nimport AchievementCard from \"../../components/achievementCard/AchievementCard\";\nimport {achievementSection} from \"../../portfolio\";\nimport {Fade} from \"react-reveal\";\nimport StyleContext from \"../../contexts/StyleContext\";\n\nexport default function Achievement() {\n  const { t } = useTranslation();\n  const {isDark} = useContext(StyleContext);\n  \n  if (!achievementSection.display) {\n    return null;\n  }\n  \n  return (\n    <Fade bottom duration={1000} distance=\"20px\">\n      <div className=\"main\" id=\"achievements\">\n        <div className=\"achievement-main-div\">\n          <div className=\"achievement-header\">\n            <h1\n              className={\n                isDark\n                  ? \"dark-mode skills-heading\"\n                  : \"skills-heading\"\n              }\n            >\n              {t('achievements.title', achievementSection.title)}\n            </h1>\n            <p\n              className={\n                isDark\n                  ? \"dark-mode subTitle achievement-subtitle\"\n                  : \"subTitle achievement-subtitle\"\n              }\n            >\n              {t('achievements.subtitle', achievementSection.subtitle)}\n            </p>\n          </div>\n          <div className=\"achievement-cards-div\">\n            {achievementSection.achievementsCards.map((card, i) => {\n              return (\n                <AchievementCard\n                  key={i}\n                  isDark={isDark}\n                  cardInfo={{\n                    title: card.title,\n                    description: card.subtitle,\n                    image: card.image,\n                    imageAlt: card.imageAlt,\n                    footer: card.footerLink\n                  }}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </Fade>\n  );\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,UAAU,KAAO,OAAO,CACvC,OAASC,cAAc,KAAQ,eAAe,CAC9C,MAAO,oBAAoB,CAC3B,MAAO,CAAAC,eAAe,KAAM,kDAAkD,CAC9E,OAAQC,kBAAkB,KAAO,iBAAiB,CAClD,OAAQC,IAAI,KAAO,cAAc,CACjC,MAAO,CAAAC,YAAY,KAAM,6BAA6B,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEvD,cAAe,SAAS,CAAAC,WAAWA,CAAA,CAAG,CACpC,KAAM,CAAEC,CAAE,CAAC,CAAGV,cAAc,CAAC,CAAC,CAC9B,KAAM,CAACW,MAAM,CAAC,CAAGZ,UAAU,CAACK,YAAY,CAAC,CAEzC,GAAI,CAACF,kBAAkB,CAACU,OAAO,CAAE,CAC/B,MAAO,KAAI,CACb,CAEA,mBACEN,IAAA,CAACH,IAAI,EAACU,MAAM,MAACC,QAAQ,CAAE,IAAK,CAACC,QAAQ,CAAC,MAAM,CAAAC,QAAA,cAC1CV,IAAA,QAAKW,SAAS,CAAC,MAAM,CAACC,EAAE,CAAC,cAAc,CAAAF,QAAA,cACrCR,KAAA,QAAKS,SAAS,CAAC,sBAAsB,CAAAD,QAAA,eACnCR,KAAA,QAAKS,SAAS,CAAC,oBAAoB,CAAAD,QAAA,eACjCV,IAAA,OACEW,SAAS,CACPN,MAAM,CACF,0BAA0B,CAC1B,gBACL,CAAAK,QAAA,CAEAN,CAAC,CAAC,oBAAoB,CAAER,kBAAkB,CAACiB,KAAK,CAAC,CAChD,CAAC,cACLb,IAAA,MACEW,SAAS,CACPN,MAAM,CACF,yCAAyC,CACzC,+BACL,CAAAK,QAAA,CAEAN,CAAC,CAAC,uBAAuB,CAAER,kBAAkB,CAACkB,QAAQ,CAAC,CACvD,CAAC,EACD,CAAC,cACNd,IAAA,QAAKW,SAAS,CAAC,uBAAuB,CAAAD,QAAA,CACnCd,kBAAkB,CAACmB,iBAAiB,CAACC,GAAG,CAAC,CAACC,IAAI,CAAEC,CAAC,GAAK,CACrD,mBACElB,IAAA,CAACL,eAAe,EAEdU,MAAM,CAAEA,MAAO,CACfc,QAAQ,CAAE,CACRN,KAAK,CAAEI,IAAI,CAACJ,KAAK,CACjBO,WAAW,CAAEH,IAAI,CAACH,QAAQ,CAC1BO,KAAK,CAAEJ,IAAI,CAACI,KAAK,CACjBC,QAAQ,CAAEL,IAAI,CAACK,QAAQ,CACvBC,MAAM,CAAEN,IAAI,CAACO,UACf,CAAE,EARGN,CASN,CAAC,CAEN,CAAC,CAAC,CACC,CAAC,EACH,CAAC,CACH,CAAC,CACF,CAAC,CAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}