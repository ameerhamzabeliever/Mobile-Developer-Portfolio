{"ast":null,"code":"import React,{useEffect}from\"react\";import{useTranslation}from\"react-i18next\";import\"./App.scss\";import Main from\"./containers/Main\";import{jsx as _jsx}from\"react/jsx-runtime\";function App(){const{i18n}=useTranslation();useEffect(()=>{// Chrome-specific language initialization\nconst initializeLanguage=()=>{try{const savedLang=localStorage.getItem('i18nextLng')||sessionStorage.getItem('i18nextLng');// Chrome often doesn't detect language properly on first load\nif(savedLang&&i18n.language!==savedLang){console.log('Chrome fix: Setting language to',savedLang);i18n.changeLanguage(savedLang);}else if(!savedLang&&i18n.language==='en-US'){// Chrome sometimes returns 'en-US' instead of 'en'\ni18n.changeLanguage('en');}}catch(error){console.warn('Language initialization error:',error);// Fallback to English if there's any error\ni18n.changeLanguage('en');}};// Run after a short delay to ensure i18n is fully initialized\nconst timer=setTimeout(initializeLanguage,100);return()=>clearTimeout(timer);},[i18n]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Main,{})});}export default App;","map":{"version":3,"names":["React","useEffect","useTranslation","Main","jsx","_jsx","App","i18n","initializeLanguage","savedLang","localStorage","getItem","sessionStorage","language","console","log","changeLanguage","error","warn","timer","setTimeout","clearTimeout","children"],"sources":["/Users/ameerhamza/Downloads/Development/Mobile-Developer-Portfolio/src/App.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./App.scss\";\nimport Main from \"./containers/Main\";\n\nfunction App() {\n  const { i18n } = useTranslation();\n\n  useEffect(() => {\n    // Chrome-specific language initialization\n    const initializeLanguage = () => {\n      try {\n        const savedLang = localStorage.getItem('i18nextLng') || \n                         sessionStorage.getItem('i18nextLng');\n        \n        // Chrome often doesn't detect language properly on first load\n        if (savedLang && i18n.language !== savedLang) {\n          console.log('Chrome fix: Setting language to', savedLang);\n          i18n.changeLanguage(savedLang);\n        } else if (!savedLang && i18n.language === 'en-US') {\n          // Chrome sometimes returns 'en-US' instead of 'en'\n          i18n.changeLanguage('en');\n        }\n      } catch (error) {\n        console.warn('Language initialization error:', error);\n        // Fallback to English if there's any error\n        i18n.changeLanguage('en');\n      }\n    };\n\n    // Run after a short delay to ensure i18n is fully initialized\n    const timer = setTimeout(initializeLanguage, 100);\n    return () => clearTimeout(timer);\n  }, [i18n]);\n\n  return (\n    <div>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,cAAc,KAAQ,eAAe,CAC9C,MAAO,YAAY,CACnB,MAAO,CAAAC,IAAI,KAAM,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAErC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAAEC,IAAK,CAAC,CAAGL,cAAc,CAAC,CAAC,CAEjCD,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAO,kBAAkB,CAAGA,CAAA,GAAM,CAC/B,GAAI,CACF,KAAM,CAAAC,SAAS,CAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,EACnCC,cAAc,CAACD,OAAO,CAAC,YAAY,CAAC,CAErD;AACA,GAAIF,SAAS,EAAIF,IAAI,CAACM,QAAQ,GAAKJ,SAAS,CAAE,CAC5CK,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAEN,SAAS,CAAC,CACzDF,IAAI,CAACS,cAAc,CAACP,SAAS,CAAC,CAChC,CAAC,IAAM,IAAI,CAACA,SAAS,EAAIF,IAAI,CAACM,QAAQ,GAAK,OAAO,CAAE,CAClD;AACAN,IAAI,CAACS,cAAc,CAAC,IAAI,CAAC,CAC3B,CACF,CAAE,MAAOC,KAAK,CAAE,CACdH,OAAO,CAACI,IAAI,CAAC,gCAAgC,CAAED,KAAK,CAAC,CACrD;AACAV,IAAI,CAACS,cAAc,CAAC,IAAI,CAAC,CAC3B,CACF,CAAC,CAED;AACA,KAAM,CAAAG,KAAK,CAAGC,UAAU,CAACZ,kBAAkB,CAAE,GAAG,CAAC,CACjD,MAAO,IAAMa,YAAY,CAACF,KAAK,CAAC,CAClC,CAAC,CAAE,CAACZ,IAAI,CAAC,CAAC,CAEV,mBACEF,IAAA,QAAAiB,QAAA,cACEjB,IAAA,CAACF,IAAI,GAAE,CAAC,CACL,CAAC,CAEV,CAEA,cAAe,CAAAG,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}